name: Spring Boot Gradle CI/CD

# main 브랜치에 push될 때 실행
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️ 소스코드 가져오기
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️ JDK 설정 (필요한 버전)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3️ Gradle 캐시 (빌드 속도 향상)
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # 4️ Gradle 빌드
      - name: Build JAR with Gradle
        run: ./gradlew clean build -x test

      # 5️ Public 서버 배포 (SSH)
      - name: Deploy to Public Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PUBLIC_HOST }}         # Public 서버 IP
          username: ${{ secrets.PUBLIC_USER }}     # 계정명 (root)
          key: ${{ secrets.PUBLIC_SSH_KEY }}       # 개인키
          script: |
            # 5-1. 앱 디렉토리 생성
            mkdir -p /root/app

            # 5-2. JAR 파일 복사
            scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no build/libs/*.jar root@${{ secrets.PUBLIC_HOST }}:/root/app/app.jar

            # 5-3. Public 서버에서 실행 스크립트 호출
            # deploy_private.sh는 Public 서버에서 Private 서버로 배포 처리
            /root/app/deploy_private.sh
